<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.2.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
    http://www.springframework.org/schema/util 
    http://www.springframework.org/schema/util/spring-util-3.2.xsd">


	 <!-- 引入属性文件 -->  
    <context:property-placeholder location="classpath:jdbc.properties" />  
    <!-- 自动扫描(自动注入) -->  
<!--     <context:component-scan base-package="com.gray.*.service" />   -->
    
    <!--本示例采用druid连接池。 连接池配置如下 -->
    <!-- 配置数据源 -->  
   	<bean name="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
	<property name="url" value="${jdbc.url}" />
	<property name="username" value="${jdbc.username}" />
	<property name="password" value="${jdbc.password}" />

	<!-- 初始化连接大小 -->
	<property name="initialSize" value="${druid.initialSize}" />
	<!-- 连接池最大使用连接数量 -->
	<property name="maxActive" value="${druid.maxActive}" />
	<!-- 连接池最大空闲 -->
	<property name="maxIdle" value="${druid.maxIdle}" />
	<!-- 连接池最小空闲 -->
	<property name="minIdle" value="${druid.minIdle}" />
	<!-- 获取连接最大等待时间 -->
	<property name="maxWait" value="${druid.maxWait}" />

	<property name="validationQuery" value="${druid.validationQuery}" />
	<property name="testOnBorrow" value="${druid.testOnBorrow}" />
	<property name="testOnReturn" value="false" />
	<property name="testWhileIdle" value="true" />

	<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
	<property name="timeBetweenEvictionRunsMillis" value="60000" />
	<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
	<property name="minEvictableIdleTimeMillis" value="25200000" />

	<!-- 打开removeAbandoned功能 -->
	<property name="removeAbandoned" value="true" />
	<!-- 1800秒，也就是30分钟 -->
	<property name="removeAbandonedTimeout" value="1800" />
	<!-- 关闭abanded连接时输出错误日志 -->
	<property name="logAbandoned" value="true" />

	<!-- 监控数据库 -->
	<property name="filters" value="mergeStat" />
</bean>
      
    <!-- 配置SqlSessionFactory对象 -->  
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
        <property name="dataSource" ref="dataSource" />  
        <!-- 自动扫描entity目录, 省掉Configuration.xml里的手工配置 -->  
        <property name="configLocation" value="classpath:mybatis-config.xml" />  
        <property name="mapperLocations" value="classpath*:mapper/*.xml" />  
    </bean>  
  
   <!-- 配置扫描Dao接口包，动态实现Dao接口，注入到spring容器中 -->
   <!-- 	配置 mapper 扫描器
        * 接口类名和映射文件必须同名
        * 接口类和映射文件必须在同一个目录下
        * 映射文件namespace名字必须是接口的全类路径名
        * 接口的方法名必须和映射Statement的id一致 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
    	 <!-- 给出需要扫描Dao接口包 ,如果需要扫描多个包，中间使用逗号分隔-->
        <property name="basePackage"  value="com.liyuan.persistence.mybatis" />  
        <!-- 注入sqlSessionFactory -->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />  
    </bean> 
    
	 
    <!-- 配置事务管理器 -->  
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
      <property name="dataSource" ref="dataSource" />  
    </bean>  
      
    <!-- 配置事物的注解方式注入 -->  
    <tx:annotation-driven transaction-manager="transactionManager"/>    
  
  
  <!-- 通知 -->
   <!--  <tx:advice id="txAdvice" transaction-manager="transactionManager">
         <tx:attributes>
             <tx:method name="save*" propagation="REQUIRED"/>
             <tx:method name="delete*" propagation="REQUIRED"/>
             <tx:method name="update*" propagation="REQUIRED"/>
             <tx:method name="insert*" propagation="REQUIRED"/>
             <tx:method name="find*" propagation="SUPPORTS" read-only="true"/>
             <tx:method name="get*" propagation="SUPPORTS" read-only="true"/>
             <tx:method name="select*" propagation="SUPPORTS" read-only="true"/>
         </tx:attributes>
    </tx:advice>
     
    <aop:config>
         com.ys.service.impl包里面的所有类，所有方法，任何参数
         <aop:advisor advice-ref="txAdvice" pointcut="execution(* com.ys.service.impl.*.*(..))"/>
    </aop:config> -->
  	
  <!--   <bean id="sqlSession"     class="org.mybatis.spring.SqlSessionTemplate">     
          <constructor-arg index="0" ref="sqlSessionFactory" />     
          <constructor-arg index="1" value="BATCH" />    
     </bean>   -->
</beans>